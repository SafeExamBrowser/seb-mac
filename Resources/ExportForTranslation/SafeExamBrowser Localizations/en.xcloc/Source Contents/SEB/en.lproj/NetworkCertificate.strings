// Generated by plist2strings. Manual edits will be overwritten the next time this script runs.
/* A single strings file, whose title is specified in your preferences schema. The strings files provide the localized content to display to the user for each of your preferences. */

/* String for Title elements */
"Embed Server Certificates" = "Embed Server Certificates";
"Embed in SEB desktop version" = "Embed in SEB desktop version";
"Pin Certificates" = "Pin Certificates";
"Embed Identity Certificates" = "Embed Identity Certificates";
"Choose Identity" = "Choose Identity";
"Embedded Certificates" = "Embedded Certificates";
"Certificates" = "Certificates";

/* String for Titles arrays elements */

/* String for FooterText elements */
"Self-signed TLS/SSL/CA certificates have to be embedded into config files to allow accessing a secure server. With certificate pinning, the iOS certificate store is bypassed and only embedded certificates establish trust for https connections." = "Self-signed TLS/SSL/CA certificates have to be embedded into config files to allow accessing a secure server. With certificate pinning, the iOS certificate store is bypassed and only embedded certificates establish trust for https connections.";
"Cryptographic identities (X.509 certificates with RSA public key and associated private key, which are stored securely in the Keychain) embedded into a client config file can be used to decrypt exam config files on clients." = "Cryptographic identities (X.509 certificates with RSA public key and associated private key, which are stored securely in the Keychain) embedded into a client config file can be used to decrypt exam config files on clients.";
"List of all embedded certificates in the current config file, sorted by type. SSL/CA/Debug certificates can currently only be added in SEB desktop versions." = "List of all embedded certificates in the current config file, sorted by type. SSL/CA/Debug certificates can currently only be added in SEB desktop versions.";

/* String for IASKPlaceholder elements */
